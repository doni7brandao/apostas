<?php

/**
 * @file
 * Contains mespronos.module.
 */

use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\mespronos\Controller\LastBetsController;
use Drupal\mespronos\Entity\Game;
use Drupal\mespronos\Entity\Day;
use Drupal\mespronos\Entity\League;
use Drupal\mespronos\Entity\Team;
use Drupal\mespronos\Controller\GameController;

/**
 * Implements hook_preprocess_page().
 */
function mespronos_preprocess_page(&$variables) {
  if ($variables['is_admin']) {
    $variables['#attached']['library'][] = 'mespronos/administration-style';
  }
  $variables['#attached']['library'][] = 'mespronos/front-style';
}

/**
 * Implements hook_theme().
 */
function mespronos_theme() {
  $theme = [];
  $theme['user-block'] = array(
    'template' => 'user-block',
    'variables' => array(
      'user' => NULL,
      'user_picture' => NULL,
      'links' => NULL,
    ),
  );
  $theme['game'] = array(
    'render element' => 'elements',
    'template' => 'game',
    'file' => 'templates-preprocess/game.page.inc',
  );
  $theme['group'] = array(
    'render element' => 'elements',
    'template' => 'group',
    'file' => 'templates-preprocess/group.page.inc',
  );
  $theme['league'] = array(
    'render element' => 'elements',
    'template' => 'league',
    'file' => 'templates-preprocess/league.page.inc',
  );
  $theme['team'] = array(
    'render element' => 'elements',
    'template' => 'group',
    'file' => 'templates-preprocess/team.page.inc',
  );
  $theme['game-with-flag'] = array(
    'template' => 'game-with-flag',
    'variables' => array(
      'game' => NULL,
      'team_1' => NULL,
      'team_2' => NULL,
    ),
  );
  $theme['day'] = array(
    'render element' => 'elements',
    'template' => 'day',
    'file' => 'templates-preprocess/day.page.inc',
  );
  $theme['user-profile-block'] = array(
    'template' => 'user-profile-block',
    'variables' => array(
      'user' => NULL,
      'statistics' => NULL,
      'palmares' => NULL,
      'last_bets' => NULL,
      'user_picture' => NULL,
      'links' => NULL,
    ),
  );
  $theme['block-bet-informations'] = array(
    'template' => 'block_bet_informations',
    'variables' => array(
      'day' => NULL,
      'league' => NULL,
    ),
  );
  $theme['leagues-list'] = array(
    'template' => 'leagues-list',
    'variables' => array(
      'leagues' => [],
    ),
  );
  $theme['league-details'] = array(
    'template' => 'league_details',
    'variables' => array(
      'last_bets' => NULL,
      'next_bets' => NULL,
      'ranking' => NULL,
      'groups' => [],
    ),
  );
  $theme['day-details'] = array(
    'template' => 'day_details',
    'variables' => array(
      'last_bets' => NULL,
      'ranking' => NULL,
      'league_ranking' => NULL,
      'groups' => [],
    ),
  );
  $theme['dashboard'] = array(
    'template' => 'dashboard',
    'variables' => array(
      'marks_form' => NULL,
      'stats' => NULL,
      'nextGames' => [],
    ),
  );
  $theme['day-small'] = array(
    'template' => 'day-small',
    'variables' => array(
      'league' => NULL,
      'day' => NULL,
    ),
  );
  $theme['league-small'] = array(
    'template' => 'league-small',
    'variables' => array(
      'league' => NULL,
    ),
  );
  $theme['user-ranking'] = array(
    'template' => 'user-ranking',
    'variables' => array(
      'user' => NULL,
    ),
  );
  $theme['bet-reminder'] = array(
    'template' => 'bet-reminder',
    'variables' => array(
      'user' => NULL,
      'day' => NULL,
      'config' => NULL,
    ),
  );
  $theme['ranking'] = [
    'template' => 'ranking',
    'variables' => [
      'general' => NULL,
      'average' => NULL,
    ],
  ];

  return $theme;
}

/**
 * Implements hook_form_alter().
 */
function mespronos_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if($form['#id'] == 'views-exposed-form-admin-game-admin-games') {
    $input = $form_state->getUserInput();
    $leagues = League::loadMultiple();
    $form['league_id']['#type'] = 'select';
    $form['league_id']['#size'] = 1;
    $form['league_id']['#empty_option'] = t('All');
    $form['league_id']['#empty_value'] = NULL;
    unset($form['league_id']['#default_value']);
    $form['league_id']['#options'] = [];
    foreach ($leagues as $league) {
      $form['league_id']['#options'][$league->id()] = $league->label();
    }

    /** @var Day[] $days */
    $days = Day::loadMultiple();
    $form['day_id']['#type'] = 'select';
    $form['day_id']['#size'] = 1;
    $form['day_id']['#empty_option'] = t('All');
    $form['day_id']['#empty_value'] = NULL;
    unset($form['day_id']['#default_value']);
    $form['day_id']['#options'] = [];
    $league_id = isset($input['league_id']) && is_numeric($input['league_id']) ? $input['league_id'] : NULL;
    foreach ($days as $day) {
      $league = $day->getLeagueID();
      if($league_id && $league_id != $league) {
        continue;
      }
      $form['day_id']['#options'][$day->id()] = $form['league_id']['#options'][$league] . ' - ' . $day->label();
    }
  }
}

function _mespronos_games_form_ajax_callback($form, \Drupal\Core\Form\FormStateInterface $form_state) {
  return $form;
}

function mespronos_user_login($account) {
  $destination = \Drupal::destination()->getAsArray();
  if(isset($destination['destination'])) {
    return new RedirectResponse($destination['destination']);
  }
}

function mespronos_mail($key, &$message, $params) {
  $message['from'] = \Drupal::config('system.site')->get('mail');
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['message'];
  $message['options'] = [];
  if (isset($params['options']) && !empty($params['options'])) {
    foreach ($params['options'] as $k => $value) {
      $message['options'][$k] = $value;
    }
  }
}

function mespronos_cron() {
  \Drupal\mespronos\Controller\ReminderController::init();
}

function mespronos_entity_extra_field_info() {
  $extra['user']['user']['display']['hall_of_flame'] = array(
    'label' => t('Hall of flame'),
    'weight' => 100,
    'visible' => TRUE,
  );
  $extra['user']['user']['display']['last_results'] = array(
    'label' => t('Last Results'),
    'weight' => 100,
    'visible' => TRUE,
  );
  $extra['user']['user']['display']['pseudo'] = array(
    'label' => t('Pseudo'),
    'weight' => 100,
    'visible' => FALSE,
  );
  $extra['user']['user']['display']['last_bets'] = array(
    'label' => t('Derniers pronostics'),
    'weight' => 100,
    'visible' => FALSE,
  );
  $extra['game']['game']['display']['better_bets'] = array(
    'label' => t('Betters\' bets'),
    'weight' => 100,
    'visible' => TRUE,
  );
  $extra['game']['game']['display']['flags'] = array(
    'label' => t('Teamss\' logos'),
    'weight' => 101,
    'visible' => TRUE,
  );
  $extra['day']['day']['display']['results_and_ranking'] = array(
    'label' => t('Day results and rankings'),
    'weight' => 101,
    'visible' => TRUE,
  );
  $extra['league']['league']['display']['results_and_ranking'] = array(
    'label' => t('Day results and rankings'),
    'weight' => 100,
    'visible' => TRUE,
  );
  $extra['team']['team']['display']['last_results'] = array(
    'label' => t('Team last results'),
    'weight' => 100,
    'visible' => TRUE,
  );
  return $extra;
}

function mespronos_user_view(array &$build, Drupal\user\Entity\User $entity, EntityViewDisplay $display, $view_mode) {
  if($view_mode == 'full') {
    $block_manager = \Drupal::service('plugin.manager.block');
    if ($display->getComponent('hall_of_flame')) {
      $plugin_block = $block_manager->createInstance('user_profil_block', []);
      $render = $plugin_block->build();
      $build['hall_of_flame'] = [];
      $build['hall_of_flame']['content'] = [
        '#type' => 'container',
        'element-content' => $render,
      ];
    }
    if ($display->getComponent('last_results')) {
      $lastBetController = new LastBetsController();
      $user = \Drupal\user\Entity\User::load($entity->id());
      $build['last_results'] = $lastBetController->lastBets(NULL,50,'BLOCK', $user,TRUE);
    }
    if ($display->getComponent('last_bets')) {
      $build['last_bets'] = \Drupal::service('mespronos.bet_manager')->getRecentBetsForUserTable($user, 64, NULL, TRUE);
    }
  }
  if ($display->getComponent('pseudo')) {
    $build['username'] = [
      '#markup' => '<h3>'.$entity->label().'</h3>',
    ];
  }
}

function mespronos_game_view(array &$build, Game $entity, EntityViewDisplay $display, $view_mode) {
  if ($display->getComponent('better_bets')) {
    $build['betters_bets'] = GameController::getBettersBets($entity);
  }
  if ($display->getComponent('flags')) {
    $build['flags'] = GameController::getTeamFlags($entity);
  }
}

function mespronos_day_view(array &$build, Day $entity, EntityViewDisplay $display, $view_mode) {
  if ($display->getComponent('results_and_ranking')) {
    $build['results_and_ranking'] = \Drupal\mespronos\Controller\DayController::getResultsAndRankings($entity);
  }
}

function mespronos_league_view(array &$build, League $entity, EntityViewDisplay $display, $view_mode) {
  if ($display->getComponent('results_and_ranking')) {
    $build['results_and_ranking'] = \Drupal\mespronos\Controller\LeagueController::getResultsAndRanking($entity);
  }
}

function mespronos_team_view(array &$build, Team $entity, EntityViewDisplay $display, $view_mode) {
  if ($display->getComponent('last_results')) {
    $build['last_results'] = \Drupal\mespronos\Controller\TeamController::getLastResults($entity);
  }
}

/**
 * Implements hook_user_update().
 */
function mespronos_user_update(\Drupal\user\Entity\User $user) {
  $query = \Drupal::entityQuery('day');
  $ids = $query->execute();
  $days = \Drupal::entityTypeManager()->getStorage("day")->loadMultiple($ids);

  $trans = \Drupal::service('transliteration');
  $alias_manager = \Drupal::service('path.alias_manager');
  $alias_storage = \Drupal::service('path.alias_storage');

  foreach ($days as $day) {
    $alias_day = $alias_manager->getAliasByPath('/mespronos/day/' . $day->id());
    $system_path = '/mespronos/day/' . $day->id() . '/results/user/' . $user->id();
    $path_alias = str_replace('.html', '', $alias_day) . '/les-pronos-de-' . $trans->transliterate($user->label()) . '.html';
    $urlAlias = $alias_manager->getAliasByPath($system_path);
    if ($urlAlias && $urlAlias != $path_alias) {
      $alias_storage->save($system_path, $path_alias);
    }
  }
}


function mespronos_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if(!\Drupal::moduleHandler()->moduleExists('mespronos_group')) {
    $form['bet_private']['#access'] = FALSE;
  }
}

function mespronos_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if(!\Drupal::moduleHandler()->moduleExists('mespronos_group') || \count(\Drupal::service('mespronos.user_manager')->getUserGroups()) == 0) {
    $form['bet_private']['#access'] = FALSE;
  }
}
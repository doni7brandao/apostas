<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\user\RoleInterface;

function mespronos_install() {
  $permission_anonymous = [
    'view next bets days',
    'view last bets days',
  ];
  $permission_authenticated = [
    'view next bets days',
    'view last bets days',
    'subscribe to league',
    'make a bet',
    'view own last bets',
    'view others last bets',
  ];

  user_role_grant_permissions('anonymous', $permission_anonymous);
  user_role_grant_permissions('authenticated', $permission_authenticated);
}

/**
 * RankingDay - position field for existing installation
 */
function mespronos_update_8001() {
    $field = BaseFieldDefinition::create('integer')
      ->setLabel('Position')
      ->setRevisionable(TRUE)
      ->setSetting('unsigned', TRUE)
      ->setDisplayOptions('view', array(
        'label' => 'hidden',
        'type' => 'integer',
        'weight' => 6,
      ))
      ->setDisplayOptions('form', array(
        'type' => 'number',
        'weight' => 6,
      ));

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('position', 'ranking_day', 'ranking_day', $field);
}

/**
 * Ranking - add permission to view ranking
 */
function mespronos_update_8002() {
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('view ranking'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('view ranking'));
}

/**
 * Ranking - add permission to view day results
 */
function mespronos_update_8003() {
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('view day results'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('view day results'));
}
/**
 * game - add permission to view entity game
 */
function mespronos_update_8004() {
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('view game entity'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('view game entity'));
}

/**
 * Day - Create alias foreach day for betting page
 */
function mespronos_update_8005() {
  $query = \Drupal::entityQuery('day');
  $ids = $query->execute();
  $days = \Drupal::entityTypeManager()->getStorage("day")->loadMultiple($ids);
  foreach ($days as $day) {
    $day->save();
  }
}
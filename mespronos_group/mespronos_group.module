<?php
use Drupal\mespronos_group\Entity\Group;
use Drupal\Core\Entity\Entity\EntityViewDisplay;
use Drupal\Core\Cache\Cache;


function mespronos_group_theme() {
  $themes = [];
  $themes['group-list'] = array(
    'template' => 'group-list',
    'variables' => array(
      'groups' => [],
      'display_titles' => TRUE,
      'user_groups' => [],
    ),
  );
  $themes['group-description'] = array(
    'template' => 'group-description',
    'variables' => [],
  );
  $themes['group-form-warning'] = array(
    'template' => 'group-form-warning',
    'variables' => [],
  );
  $themes['group-administration'] = array(
    'template' => 'group-administration',
    'variables' => [
      'group' => [],
    ],
  );
  $themes['email-new-group'] = array(
    'template' => 'email-new-group',
    'variables' => [
      'group' => [],
      'user' => [],
    ],
  );
  return $themes;
}

function mespronos_group_entity_extra_field_info() {
  $extra = [];
  $extra['group']['group']['display']['block_members'] = array(
    'label' => t('Member list'),
    'weight' => 100,
    'visible' => TRUE,
  );
  $extra['group']['group']['display']['block_ranking'] = array(
    'label' => t('Group ranking'),
    'weight' => 102,
    'visible' => TRUE,
  );
  return $extra;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function mespronos_group_preprocess_group(&$variables) {
  /**@var Group $group */
  $group = $variables['group'];
  $variables['has_description'] = $variables['elements']['#view_mode'] === 'full' && NULL !== $group->get('description')->value;
}

function mespronos_group_group_view(array &$build, Group $entity, EntityViewDisplay $display, $view_mode) {
  if ($view_mode == 'full') {
    $block_manager = \Drupal::service('plugin.manager.block');
    if ($display->getComponent('block_members')) {
      $plugin_block = $block_manager->createInstance('group_members_block', []);
      $render = $plugin_block->build();
      $build['block_members'] = [];
      $build['block_members']['title'] = [
        '#markup' => '<h2>' . t('Members') . '</h2>'
      ];
      $build['block_members']['content'] = [
        '#type' => 'container',
        'element-content' => $render,
      ];
    }

    if ($display->getComponent('block_ranking')) {
      $plugin_block = $block_manager->createInstance('group_ranking_block', []);
      $render = $plugin_block->build();
      $build['block_ranking'] = [];
      $build['block_ranking']['title'] = [
        '#markup' => '<h2>' . t('Group ranking') . '</h2>'
      ];
      $build['block_ranking']['content'] = [
        '#type' => 'container',
        'element-content' => $render,
      ];
    }
  }
}

function mespronos_group_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $form['group_info'] = [
    '#type' => 'fieldset',
    '#title' => t('Optional : join a group'),
  ];
  $form['group_info']['group_access_code'] = [
    '#type' => 'textfield',
    '#title' => t('Group access code'),
    '#description' => t('If you want to join a group, please fill the access code the group owner gave you.')
  ];
  if ($code = \Drupal::request()->query->get('group_code')) {
    $form['group_info']['group_access_code']['#default_value'] = $code;
    $form['bet_private']['#access'] = TRUE;
  }
  else {
    $form['bet_private']['#access'] = FALSE;
  }
  $form['#validate'][] = 'mespronos_group_form_user_register_form_validate';
}

function mespronos_group_form_user_register_form_validate(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {

  $code = $form_state->getValue('group_access_code');
  if ($code != NULL) {
    $group = Group::loadByCode($code);
    if (!$group) {
      $form_state->setErrorByName('group_access_code', t('The access code to join a group is wrong'));
    } else {
      $formO = $form_state->getFormObject();
      $user = $formO->getEntity();
      $user->set('field_group', $group->id());
      if ($form['group_info']['group_access_code']['#type'] !== 'value') {
        drupal_set_message(t('You are now part of the group %group_name', ['%group_name' => $group->label()]));
      }
      Cache::invalidateTags(array('groups', 'ranking'));
    }
  }
}

function mespronos_group_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'user') {
    $fields = [];

    $fields['bet_private'] = \Drupal\Core\Field\BaseFieldDefinition::create('boolean')
      ->setLabel(t('Hide my account on main website'))
      ->setDescription(t('Your ranking will only be visible on your group page, and will be hidden in the general ranking.'))
      ->setDefaultValue(0)
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    return $fields;
  }
}